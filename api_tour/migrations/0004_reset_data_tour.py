# Generated by Django 4.1 on 2023-05-12 08:38

from django.db import migrations

# Generated by Django 4.1 on 2023-04-28 03:58
import random

from django.db import migrations
import json

from api_user.statics import RoleData


def initial_tour_data(apps, schema_editor):
    city_model = apps.get_model("api_general", "City")
    tour_model = apps.get_model("api_tour", "Tour")
    image_model = apps.get_model("api_general", "Image")
    tour_image_model = apps.get_model("api_tour", "TourImage")
    profile_models = apps.get_model("api_user", 'Profile')
    role_model = apps.get_model("api_user", "Role")
    tour_model.objects.all().delete()
    image_model.objects.all().delete()
    tour_image_model.objects.all().delete()
    partner_role = role_model.objects.filter(id=RoleData.PARTNER.value.get('id')).first()
    partner = profile_models.objects.filter(role=partner_role)

    with open('api_tour/statics/craw_datatour_data.txt', 'r', encoding='utf-8') as f:
        list_data = json.load(f)

    for data in list_data:
        city_name = data['departure'].split(',')[0]
        city = city_model.objects.filter(name=city_name).first()

        try:
            price = int(data['price'].replace(",", "").replace("đ", ""))
        except Exception:
            price = 3000000
        tour = tour_model(
            name=data['name'], cover_picture=data['cover_image'],
            city=city, descriptions=data['description'],
            schedule_content=data['schedule_content'], note=data['note'],
            num_review=int(data['num_review']), group_size=data['group_size'],
            price=price, owner=partner[random.randint(0, len(partner)-2)],
            total_days=data['total_days'], language_tour="Việt Nam",
            departure=data['departure'], traffics=data['traffics']
        )
        tour.save()
        tour_images = []
        for link in data['images']:
            image = image_model(link=link)
            image.save()
            tour_images.append(tour_image_model(image=image, tour=tour))
        tour_image_model.objects.bulk_create(tour_images)


def delete_all_data(apps, schema_editor):
    tour_model = apps.get_model("api_tour", "Tour")
    tour_image_model = apps.get_model("api_tour", "TourImage")
    tour_model.objects.all().delete()
    tour_image_model.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('api_tour', '0003_tour_departure_tour_traffics'),
    ]

    operations = [
        migrations.RunPython(initial_tour_data, delete_all_data)
    ]
